[tool.poetry]
name = "checksec-py"
version = "0.7.2"
description = "Checksec tool implemented in Python"
authors = ["Mathieu Tarral <mathieu.tarral@protonmail.com>"]
readme = "README.md"
packages = [{include = "checksec"}]
license = "GPL-3.0-only"
repository = "https://github.com/Wenzel/checksec.py"
keywords = ["checksec", "security", "ELF", "PE", "binary"]

[tool.poetry.scripts]
checksec = 'checksec.__main__:entrypoint'

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
lief = "0.13.0"
docopt = "0.6.2"
rich = "13.3.5"
pylddwrap = "1.0.1"

[tool.poetry.dev-dependencies]
flake8 = "5.0.4"
flake8-bugbear = "20.1.4"
isort = "5.10.1"
black = "24.3.0"
mypy = "1.2.0"
pytest = "7.2.0"
coverage = { version = "5.3", extras = ["toml"] }
poethepoet = "0.20.0"
pyinstaller = "5.13.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.coverage.run]
# measure branch coverage in addition to statement coverage
branch = true

[tool.poe.tasks]
fmt = "black ."
flake8 = "flake8 --show-source --statistics"
isort = "isort --line-length 120 --profile black ."
lint = ["flake8", "isort"]
mypy = "mypy ."
type = ["mypy"]
cov_combine = "coverage combine"
cov_report = "coverage report"
run_test_e2e = "coverage run --concurrency=multiprocessing -m pytest -v -k e2e"
test_e2e = ["run_test_e2e", "cov_combine", "cov_report"]
